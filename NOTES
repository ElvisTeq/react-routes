## 1 Installing React Router

- npm i react-router-dom@5

///////////////////////////////////////////////////////////////////////////////////////

## 2 Using & Routes

- "App.js"
  => Linking Router Components with { Route }

- "Welcome.js"
  => Router Component Created

- "Product.js"
  => Router Component Created

- "index.js"
  => Activating { Route } fearures with { BrowserRouter }

----------------------------------------------- import { Route } from 'react-router-dom'
To Link Route Components <Route path="/welcome"><Welcome /></Route>
path => URL/welcome
----------------------------------------------- import { BrowserRouter } from 'react-router-dom'
To activate { Route } reatures (Needs to be added in top layer) <BrowserRouter><App /></BrowserRouter>

**\*\*** Router Component Created inside a "pages" folder **\*\***

///////////////////////////////////////////////////////////////////////////////////////

## 3 Working with Link (preventDefault())

- "MainHeader.js"
  => Header With a list of links "href" for our Router Components
  => { Link } implemented to "preventDefault()"

----------------------------------------------- import { Link } from 'react-router-dom'
to href & preventDefault() => <Link to="/welcome">Welcome</Link>

///////////////////////////////////////////////////////////////////////////////////////

## 4 Using NavLinks

- "MainHeader.js"
  => { navLink } implemented replaced { Link }

----------------------------------------------- import { navLink } from 'react-router-dom'
Does the same as { Link } but contains "activeClassName={}"
<NavLink activeClassName={classes.active} to='/welcome'>Welcome</NavLink>
"activeClassName={}" => add CSS when link is active

///////////////////////////////////////////////////////////////////////////////////////

## 5 Adding Dynamic Routes with Params "/:"

- Created
  => "ProductDetail.js"

- "Product.js"
  => Added <li> of products

- "App.js"
  => <Route path="/product-detail/:productId"> <anyModule /> </Route>
  => To dynamically change URL based on ":anyThing"
  => ":productId" could be "anything", and will active <anyModule>

///////////////////////////////////////////////////////////////////////////////////////

## 6 Extracting Route Params

- "ProductDetail.js"
  => Implemented { useParams } to extract Params passed by "App.js"

------------------------------------------------ import { useParams } from 'react-router-dom'
To extract params "/:"

///////////////////////////////////////////////////////////////////////////////////////

## 6 Using "Switch" and "exact" for Configuring Routes

- "Products.js"
  => { Link } implemented to the <li> items

- "App.js"
  => { Switch } implemented (Wrapped around all <Route>) To allow only 1 to be activated
  => Added "exact" to (only run if exact URL)

------------------------------------------------ import { Switch } from 'react-router-dom'
To allow only 1 route to be activated (finds/renders first match) (will not consider "/:")
**\*** FIX **\***

1. <Route path='anyThing' exact> (only run if exact URL)
2. Change JSX order
